/**
* Generated by go-doudou v2.5.13.
* You can edit it as your need.
 */
package service

import (
	"context"
	"example/doudou-app/config"
	"example/doudou-app/dto"

	"github.com/brianvoe/gofakeit/v6"
)

var _ Doudou = (*DoudouImpl)(nil)

type DoudouImpl struct {
	conf *config.Config
}

func (receiver *DoudouImpl) PostUser(ctx context.Context, user dto.GddUser) (data dto.GddUser, err error) {
	var _result struct {
		Data dto.GddUser
	}
	_ = gofakeit.Struct(&_result)
	return _result.Data, nil
}
func (receiver *DoudouImpl) PutUser(ctx context.Context, user dto.GddUser) (re error) {
	var _result struct {
	}
	_ = gofakeit.Struct(&_result)
	return nil
}
func (receiver *DoudouImpl) DeleteUser(ctx context.Context, user dto.GddUser) (re error) {
	var _result struct {
	}
	_ = gofakeit.Struct(&_result)
	return nil
}
func (receiver *DoudouImpl) GetUsers(ctx context.Context, parameter dto.Parameter) (data dto.Page, err error) {
	var _result struct {
		Data dto.Page
	}
	_ = gofakeit.Struct(&_result)
	return _result.Data, nil
}

func NewDoudou(conf *config.Config) *DoudouImpl {
	return &DoudouImpl{
		conf: conf,
	}
}
